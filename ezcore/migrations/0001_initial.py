# Generated by Django 5.2 on 2025-04-13 10:21

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(verbose_name='record date')),
                ('record_type', models.CharField(choices=[('routine_check', 'Routine Check'), ('illness', 'Illness'), ('injury', 'Injury'), ('vaccination', 'Vaccination'), ('treatment', 'Treatment'), ('surgery', 'Surgery'), ('other', 'Other')], max_length=20, verbose_name='record type')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='temperature (Â°C)')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='weight (kg)')),
                ('diagnosis', models.CharField(blank=True, max_length=255, verbose_name='diagnosis')),
                ('symptoms', models.TextField(blank=True, verbose_name='symptoms')),
                ('treatment', models.TextField(blank=True, verbose_name='treatment')),
                ('medication', models.CharField(blank=True, max_length=255, verbose_name='medication')),
                ('dosage', models.CharField(blank=True, max_length=100, verbose_name='dosage')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='follow-up date')),
                ('recovery_date', models.DateField(blank=True, null=True, verbose_name='recovery date')),
                ('vet_name', models.CharField(blank=True, max_length=255, verbose_name='veterinarian name')),
                ('vet_contact', models.CharField(blank=True, max_length=255, verbose_name='veterinarian contact')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='cost')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'animal health record',
                'verbose_name_plural': 'animal health records',
                'ordering': ['-record_date'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_date', models.DateField(verbose_name='expense date')),
                ('expense_type', models.CharField(choices=[('feed', 'Feed'), ('medicine', 'Medicine'), ('equipment', 'Equipment'), ('utilities', 'Utilities'), ('labor', 'Labor'), ('maintenance', 'Maintenance'), ('veterinary', 'Veterinary'), ('transportation', 'Transportation'), ('other', 'Other')], max_length=20, verbose_name='expense type')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit', 'Credit'), ('other', 'Other')], default='cash', max_length=20, verbose_name='payment method')),
                ('vendor', models.CharField(blank=True, max_length=255, verbose_name='vendor')),
                ('receipt_number', models.CharField(blank=True, max_length=100, verbose_name='receipt number')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'expense',
                'verbose_name_plural': 'expenses',
                'ordering': ['-expense_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='amount (kg)')),
                ('time_of_day', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening'), ('other', 'Other')], max_length=20, verbose_name='time of day')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'feeding record',
                'verbose_name_plural': 'feeding records',
                'ordering': ['-date', 'time_of_day'],
            },
        ),
        migrations.CreateModel(
            name='FeedingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'feeding schedule',
                'verbose_name_plural': 'feeding schedules',
                'ordering': ['-start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FeedingScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='amount (kg)')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('twice_daily', 'Twice Daily'), ('weekly', 'Weekly'), ('custom', 'Custom')], default='daily', max_length=20, verbose_name='frequency')),
                ('custom_frequency', models.CharField(blank=True, max_length=255, verbose_name='custom frequency')),
                ('morning', models.BooleanField(default=True, verbose_name='morning')),
                ('afternoon', models.BooleanField(default=False, verbose_name='afternoon')),
                ('evening', models.BooleanField(default=True, verbose_name='evening')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
            ],
            options={
                'verbose_name': 'feeding schedule item',
                'verbose_name_plural': 'feeding schedule items',
                'ordering': ['schedule', 'feed_type'],
            },
        ),
        migrations.CreateModel(
            name='FeedType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('feed_category', models.CharField(choices=[('forage', 'Forage'), ('concentrate', 'Concentrate'), ('supplement', 'Supplement'), ('mineral', 'Mineral'), ('other', 'Other')], max_length=20, verbose_name='feed category')),
                ('protein_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='protein percentage')),
                ('energy_content', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='energy content (MJ/kg)')),
                ('fiber_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='fiber percentage')),
                ('suitable_for_dairy', models.BooleanField(default=True, verbose_name='suitable for dairy')),
                ('suitable_for_meat', models.BooleanField(default=True, verbose_name='suitable for meat')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'feed type',
                'verbose_name_plural': 'feed types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('item_type', models.CharField(choices=[('feed', 'Feed'), ('medicine', 'Medicine'), ('equipment', 'Equipment'), ('supplies', 'Supplies'), ('other', 'Other')], max_length=20, verbose_name='item type')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='quantity')),
                ('unit', models.CharField(max_length=50, verbose_name='unit')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='unit price')),
                ('minimum_stock_level', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum quantity before reordering', max_digits=10, null=True, verbose_name='minimum stock level')),
                ('reorder_quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Quantity to order when restocking', max_digits=10, null=True, verbose_name='reorder quantity')),
                ('storage_location', models.CharField(blank=True, max_length=255, verbose_name='storage location')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='expiry date')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'inventory item',
                'verbose_name_plural': 'inventory items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(verbose_name='transaction date')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('usage', 'Usage'), ('adjustment', 'Adjustment'), ('wastage', 'Wastage'), ('transfer', 'Transfer'), ('other', 'Other')], max_length=20, verbose_name='transaction type')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='quantity')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='unit price')),
                ('reference', models.CharField(blank=True, max_length=255, verbose_name='reference')),
                ('supplier', models.CharField(blank=True, max_length=255, verbose_name='supplier')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'inventory transaction',
                'verbose_name_plural': 'inventory transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_date', models.DateField(verbose_name='sale date')),
                ('sale_type', models.CharField(choices=[('animal', 'Animal'), ('milk', 'Milk'), ('meat', 'Meat'), ('other', 'Other')], max_length=20, verbose_name='sale type')),
                ('customer_name', models.CharField(blank=True, max_length=255, verbose_name='customer name')),
                ('customer_contact', models.CharField(blank=True, max_length=255, verbose_name='customer contact')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit', 'Credit'), ('other', 'Other')], default='cash', max_length=20, verbose_name='payment method')),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('partial', 'Partially Paid'), ('pending', 'Pending'), ('cancelled', 'Cancelled')], default='paid', max_length=20, verbose_name='payment status')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='amount paid')),
                ('invoice_number', models.CharField(blank=True, max_length=100, verbose_name='invoice number')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'sale',
                'verbose_name_plural': 'sales',
                'ordering': ['-sale_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('dairy_animal', 'Dairy Animal'), ('meat_animal', 'Meat Animal'), ('milk', 'Milk'), ('meat', 'Meat'), ('other', 'Other')], max_length=20, verbose_name='item type')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='quantity')),
                ('unit', models.CharField(max_length=50, verbose_name='unit')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='unit price')),
                ('dairy_animal_id', models.IntegerField(blank=True, null=True, verbose_name='dairy animal ID')),
                ('meat_animal_id', models.IntegerField(blank=True, null=True, verbose_name='meat animal ID')),
            ],
            options={
                'verbose_name': 'sale item',
                'verbose_name_plural': 'sale items',
                'ordering': ['sale', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_name', models.CharField(max_length=255, verbose_name='vaccine name')),
                ('vaccination_date', models.DateField(verbose_name='vaccination date')),
                ('vaccine_type', models.CharField(choices=[('preventive', 'Preventive'), ('therapeutic', 'Therapeutic'), ('other', 'Other')], default='preventive', max_length=20, verbose_name='vaccine type')),
                ('disease', models.CharField(blank=True, max_length=255, verbose_name='disease')),
                ('manufacturer', models.CharField(blank=True, max_length=255, verbose_name='manufacturer')),
                ('batch_number', models.CharField(blank=True, max_length=100, verbose_name='batch number')),
                ('dosage', models.CharField(blank=True, max_length=100, verbose_name='dosage')),
                ('administration_method', models.CharField(choices=[('injection', 'Injection'), ('oral', 'Oral'), ('nasal', 'Nasal'), ('other', 'Other')], default='injection', max_length=20, verbose_name='administration method')),
                ('next_due_date', models.DateField(blank=True, null=True, verbose_name='next due date')),
                ('administered_by', models.CharField(blank=True, max_length=255, verbose_name='administered by')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='cost')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'vaccination',
                'verbose_name_plural': 'vaccinations',
                'ordering': ['-vaccination_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('farm_name', models.CharField(blank=True, max_length=255, verbose_name='farm name')),
                ('farm_location', models.CharField(blank=True, max_length=255, verbose_name='farm location')),
                ('farm_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='farm size (acres)')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('ur', 'Urdu')], default='en', max_length=10, verbose_name='preferred language')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
